 ======================================================================
          DEEP LEARNING EĞİTİM PROGRAMI  - TensorFlow Keras
======================================================================

  TensorFlow sürümü: 2.20.0
 ⚠️  TensorFlow sürümünüz GPU'yu desteklemiyor. 2.11 veya altı bir sürüm yükleyin.

 ✨  Kullanılabilir kaynaklar (CPU/GPU): [LogicalDevice(name='/device:CPU:0', device_type='CPU')]
🟢 CPU çekirdek sayısı: 32
 ⚠️  GPU'ya erişilemedi.

  --- Veri seti seçenekleri: ------------------------------------------
   1 - Sınıflandırma - Classification      (knn_purchase_history.csv)
   2 - Regresyon - Regression              (california_housing.csv)
Default: knn_purchase_history.csv (1)
======================================================================
Seçiminize göre model oluşturulacak ve eğitilecektir.
Seçiminiz (E: exit): 1
📁  Veriseti yolu: c:\Users\ASUS\Desktop\Python with AI\temp\ML ve DL\knn_purchase_history.csv
Veriseti: (İşlem Türü: Classification) ----------------------------------------
      Customer ID  Gender  Age  Salary Product ID  Price  Purchased
0              1  Female   49   61000        P01   2000          1
1              2    Male   36   30000        P02   2000          1
2              3  Female   26   81000        P02   3500          1
3              4  Female   32   74000        P01   7000          0
4              5  Female   42   56000        P01   5000          0
..           ...     ...  ...     ...        ...    ...        ...
995          996    Male   21   73000        P02   5000          1
996          997    Male   62   54000        P01   5000          0
997          998  Female   41   20000        P03   2000          0
998          999    Male   22   29000        P03   5000          0
999         1000  Female   49   36000        P03   3500          0

[1000 rows x 7 columns]

 🔢  X shape: (1000, 6) (['Customer ID', 'Gender', 'Age', 'Salary', 'Product ID', 'Price'])
 🔢  y shape: (1000,) (Purchased)
==================================================
              count       mean           std      min       25%      50%       75%       max
Customer ID  1000.0    500.500    288.819436      1.0    250.75    500.5    750.25    1000.0
Age          1000.0     40.989     13.738837     18.0     29.00     40.0     53.00      64.0
Salary       1000.0  58667.000  23615.372044  20000.0  38000.00  59000.0  80000.00  100000.0
Price        1000.0   4435.500   1847.973148   2000.0   3500.00   5000.0   7000.00    7000.0
Purchased    1000.0      0.414      0.492795      0.0      0.00      0.0      1.00       1.0
==================================================

 🔢  X_train_transformed shape: (800, 8)
🔸  1. katman nöron sayısı: 10
🔸  2. katman nöron sayısı: 10
🔸  3. katman nöron sayısı: 10

 🧠  3 katmanlı model oluşturuldu.

 💫  Model ve Eğitim Bilgileri:
      🔸   Dataset                    : knn_purchase_history.csv
      🔸   Record Count               : 1,000   →  Train: 800  Test: 200
      🔸   Process Type               : Classification
      🔸   Hidden Layers              : 3
      🔸   Neuron # in each Layer     : 10
      🔸   Activation                 : relu
      🔸   Epochs                     : 130
      🔸   Optimization               : adam
      🔸   Loss Function              : sparse_categorical_crossentropy
      🔸   Metric                     : accuracy
      🔸   Test Split                 : 0.2
      🔸   Validation Split           : 0.5
      🔸   Learning Rate              : 0.001 (atanan)
      🔸   Early Stopping Patience    : 10 epochs
      🔸   Early Stopping Min Delta   : 0.001
      🔸   Early Stopping Monitor     : val_loss

💫  Model eğitiliyor...
Epoch 103: early stopping
Restoring model weights from the end of the best epoch: 93.
⏱️  Eğitim süresi: 7.99 saniye
🚩 3 katman → Doğruluk: 0.74250
✅  Model eğitildi

➡️  Model test verisi üzerinde değerlendiriliyor...
7/7 ━━━━━━━━━━━━━━━━━━━━ 0s 3ms/step - accuracy: 0.7850 - loss: 0.3974 

🔴  Test Seti Kaybı    : 0.39743363857269287
🟢  Test Seti Doğruluğu: 0.7850000262260437

Model: "sequential"
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓
┃ Layer (type)                         ┃ Output Shape                ┃         Param # ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩
│ dense (Dense)                        │ (None, 10)                  │              90 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout (Dropout)                    │ (None, 10)                  │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense_1 (Dense)                      │ (None, 10)                  │             110 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout_1 (Dropout)                  │ (None, 10)                  │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense_2 (Dense)                      │ (None, 10)                  │             110 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dropout_2 (Dropout)                  │ (None, 10)                  │               0 │
├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤
│ dense_3 (Dense)                      │ (None, 2)                   │              22 │
└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘
 Total params: 998 (3.90 KB)
 Trainable params: 332 (1.30 KB)
 Non-trainable params: 0 (0.00 B)
 Optimizer params: 666 (2.61 KB)
__________________________________________________

🛑  Early Stopping devreye girdi! Eğitim 103. epoch'ta durduruldu.
    (Planlanan: 130, Gerçekleşen: 103)

➡️  Classification: Model ile tahmin yapılıyor...
new_data=array([['1001', 'Male', '42', '50000', 'P01', '3000']], dtype='<U21')
1/1 ━━━━━━━━━━━━━━━━━━━━ 0s 33ms/step
✨ Tahmin Edilen Satın Alma Olasılığı: % 56.36
__________________________________________________